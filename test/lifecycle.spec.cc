#include "kaffeeklatsch.hh"

using namespace std;
using namespace kaffeeklatsch;

// i wonder: is there a lifecycle diagram in the CORBA spec?

// class Connection {
//    std::map<blob objectKey, Stub *stub> stubsById;  -> why??? objectKey could be global
//    interlock<uint32_t, GIOPDecoder *> interlock;
// }
//
// Stub's are generated by _narrow()
// * owned by an application object
//
// class Stub {
//   orb
//   blob objectKey
//   connection
// }
//
// Skeleton/Impl are created by the user
// * owned by nameserver
// * owned by an application object (just sending them to a peer will get them deleted)
//
// class Skeleton {
//   ORB orb
//   blob objectKey
// }

// test BiDirIIOP & two connections separatly

// wo sind überall zeiger? teste das sie wieder gelöscht werden
// und so weiter...
// für stub und skeleton, connection, protocol, pending requests, ...
kaffeeklatsch_spec([] {
    describe("lifecycle", [] {
        // * server: create Server_impl
        //     
        // * client: create Server_stub
        // 
    });
});
