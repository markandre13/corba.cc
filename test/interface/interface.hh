// This file is generated by the corba.js IDL compiler from 'corba/interface/interface.idl'.

#pragma once
#include <corba/orb.hh>
#include <corba/giop.hh>
#include <corba/coroutine.hh>
#include <corba/corba.hh>
#include <string>
#include <vector>

class Peer: public virtual CORBA::Object {
    static std::string_view _rid;public:
    virtual CORBA::async<std::string> callString(const std::string_view & value) = 0;
    std::string_view repository_id() const override;
    static CORBA::async<std::shared_ptr<Peer>> _narrow(std::shared_ptr<CORBA::Object> pointer);
};

class Interface: public virtual CORBA::Object {
    static std::string_view _rid;public:
    virtual CORBA::async<bool> callBoolean(bool value) = 0;
    virtual CORBA::async<uint8_t> callOctet(uint8_t value) = 0;
    virtual CORBA::async<uint16_t> callUShort(uint16_t value) = 0;
    virtual CORBA::async<uint32_t> callUnsignedLong(uint32_t value) = 0;
    virtual CORBA::async<uint64_t> callUnsignedLongLong(uint64_t value) = 0;
    virtual CORBA::async<int16_t> callShort(int16_t value) = 0;
    virtual CORBA::async<uint32_t> callLong(int32_t value) = 0;
    virtual CORBA::async<uint64_t> callLongLong(int64_t value) = 0;
    virtual CORBA::async<float> callFloat(float value) = 0;
    virtual CORBA::async<double> callDouble(double value) = 0;
    virtual CORBA::async<std::string> callString(const std::string_view & value) = 0;
    virtual CORBA::async<CORBA::blob> callBlob(const CORBA::blob_view & value) = 0;
    virtual CORBA::async<void> setPeer(std::shared_ptr<Peer> peer) = 0;
    virtual CORBA::async<std::string> callPeer(const std::string_view & value) = 0;
    std::string_view repository_id() const override;
    static CORBA::async<std::shared_ptr<Interface>> _narrow(std::shared_ptr<CORBA::Object> pointer);
};

