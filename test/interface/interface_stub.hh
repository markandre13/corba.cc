// This file is generated by the corba.js IDL compiler from 'corba/interface/interface.idl'.

#pragma once
#include <corba/corba.hh>
#include <corba/orb.hh>
#include <corba/giop.hh>
#include <corba/coroutine.hh>
#include <vector>
#include "interface.hh"

class Peer_stub: public Peer, public CORBA::Stub {
public:
    Peer_stub(std::shared_ptr<CORBA::ORB> orb, CORBA::blob_view objectKey, CORBA::detail::Connection *connection): Stub(orb, objectKey, connection) {}
    virtual CORBA::async<std::string> callString(const std::string_view & value) override;
};

class Interface_stub: public Interface, public CORBA::Stub {
public:
    Interface_stub(std::shared_ptr<CORBA::ORB> orb, CORBA::blob_view objectKey, CORBA::detail::Connection *connection): Stub(orb, objectKey, connection) {}
    virtual CORBA::async<bool> callBoolean(bool value) override;
    virtual CORBA::async<uint8_t> callOctet(uint8_t value) override;
    virtual CORBA::async<uint16_t> callUShort(uint16_t value) override;
    virtual CORBA::async<uint32_t> callUnsignedLong(uint32_t value) override;
    virtual CORBA::async<uint64_t> callUnsignedLongLong(uint64_t value) override;
    virtual CORBA::async<int16_t> callShort(int16_t value) override;
    virtual CORBA::async<uint32_t> callLong(int32_t value) override;
    virtual CORBA::async<uint64_t> callLongLong(int64_t value) override;
    virtual CORBA::async<float> callFloat(float value) override;
    virtual CORBA::async<double> callDouble(double value) override;
    virtual CORBA::async<std::string> callString(const std::string_view & value) override;
    virtual CORBA::async<CORBA::blob> callBlob(const CORBA::blob_view & value) override;
    virtual CORBA::async<void> setPeer(std::shared_ptr<Peer> peer) override;
    virtual CORBA::async<std::string> callPeer(const std::string_view & value) override;
};

